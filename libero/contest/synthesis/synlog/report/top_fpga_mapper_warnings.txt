@W: FX1172 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|User-specified initial value defined for instance Murax_0.system_cpu.CsrPlugin_minstret[63:0] is being ignored due to limitations in architecture. 
@W: FX1172 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|User-specified initial value defined for instance Murax_0.system_cpu.CsrPlugin_mcycle[63:0] is being ignored due to limitations in architecture. 
@W: FX1172 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5909:2:5909:7|User-specified initial value defined for instance Murax_0.jtagBridge_1_.jtag_tap_fsm_state[3:0] is being ignored due to limitations in architecture. 
@W: FX1172 :"w:\projects\security-contest\libero\contest\hdl\murax.v":700:2:700:7|User-specified initial value defined for instance Murax_0.jtagBridge_1_.flowCCByToggle_1_.inputArea_target is being ignored due to limitations in architecture. 
@W: FX1172 :"w:\projects\security-contest\libero\contest\hdl\murax.v":7490:2:7490:7|User-specified initial value defined for instance Murax_0.resetCtrl_systemClkResetCounter[5:0] is being ignored due to limitations in architecture. 
@W: FX107 :"w:\projects\security-contest\libero\contest\hdl\murax.v":6059:2:6059:7|RAM system_ram.ram_symbol3[7:0] (in view: work.Murax(verilog)) does not have a read/write conflict check. Possible simulation mismatch. To resolve a read/write conflict, either set syn_ramstyle = rw_check, or enable the "Read Write Check on RAM" Implementation Option. For more information, search for "read/write conflict check" in Online Help.
@W: FX107 :"w:\projects\security-contest\libero\contest\hdl\murax.v":6059:2:6059:7|RAM system_ram.ram_symbol2[7:0] (in view: work.Murax(verilog)) does not have a read/write conflict check. Possible simulation mismatch. To resolve a read/write conflict, either set syn_ramstyle = rw_check, or enable the "Read Write Check on RAM" Implementation Option. For more information, search for "read/write conflict check" in Online Help.
@W: FX107 :"w:\projects\security-contest\libero\contest\hdl\murax.v":6059:2:6059:7|RAM system_ram.ram_symbol1[7:0] (in view: work.Murax(verilog)) does not have a read/write conflict check. Possible simulation mismatch. To resolve a read/write conflict, either set syn_ramstyle = rw_check, or enable the "Read Write Check on RAM" Implementation Option. For more information, search for "read/write conflict check" in Online Help.
@W: FX107 :"w:\projects\security-contest\libero\contest\hdl\murax.v":6059:2:6059:7|RAM system_ram.ram_symbol0[7:0] (in view: work.Murax(verilog)) does not have a read/write conflict check. Possible simulation mismatch. To resolve a read/write conflict, either set syn_ramstyle = rw_check, or enable the "Read Write Check on RAM" Implementation Option. For more information, search for "read/write conflict check" in Online Help.
@W: FX107 :"w:\projects\security-contest\libero\contest\hdl\murax.v":2485:2:2485:7|RAM RegFilePlugin_regFile_1[31:0] (in view: work.VexRiscv(verilog)) does not have a read/write conflict check. Possible simulation mismatch. To resolve a read/write conflict, either set syn_ramstyle = rw_check, or enable the "Read Write Check on RAM" Implementation Option. For more information, search for "read/write conflict check" in Online Help.
@W: FX107 :"w:\projects\security-contest\libero\contest\hdl\murax.v":2485:2:2485:7|RAM RegFilePlugin_regFile[31:0] (in view: work.VexRiscv(verilog)) does not have a read/write conflict check. Possible simulation mismatch. To resolve a read/write conflict, either set syn_ramstyle = rw_check, or enable the "Read Write Check on RAM" Implementation Option. For more information, search for "read/write conflict check" in Online Help.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[15] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[14] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[13] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[12] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[11] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[10] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[9] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[8] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[7] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[6] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[5] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[4] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[3] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[2] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[1] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_LH[0] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[15] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[14] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[13] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[12] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[11] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[10] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[9] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[8] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[7] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[6] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[5] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[4] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[3] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[2] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[1] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Register bit execute_to_memory_MUL_HL[0] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: MO160 :"w:\projects\security-contest\libero\contest\hdl\murax.v":4894:2:4894:7|Register bit IBusSimplePlugin_fetchPc_pcReg[0] (in view view:work.VexRiscv(verilog)) is always 0. To keep the instance, apply syn_preserve=1 on the instance.
@W: BN132 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Removing instance Murax_0.system_cpu.decode_to_execute_ALU_BITWISE_CTRL[1] because it is equivalent to instance Murax_0.system_cpu.decode_to_execute_INSTRUCTION[12]. To keep the instance, apply constraint syn_preserve=1 on the instance.
@W: BN132 :"w:\projects\security-contest\libero\contest\hdl\murax.v":5214:2:5214:7|Removing instance Murax_0.system_cpu.decode_to_execute_INSTRUCTION[5] because it is equivalent to instance Murax_0.system_cpu.decode_to_execute_MEMORY_STORE. To keep the instance, apply constraint syn_preserve=1 on the instance.
@W: FX107 :"w:\projects\security-contest\libero\contest\hdl\murax.v":872:2:872:7|RAM uartCtrl_1__io_read_queueWithOccupancy.logic_ram[7:0] (in view: work.Apb3UartCtrl(verilog)) does not have a read/write conflict check. Possible simulation mismatch. To resolve a read/write conflict, either set syn_ramstyle = rw_check, or enable the "Read Write Check on RAM" Implementation Option. For more information, search for "read/write conflict check" in Online Help.
@W: FX107 :"w:\projects\security-contest\libero\contest\hdl\murax.v":872:2:872:7|RAM bridge_write_streamUnbuffered_queueWithOccupancy.logic_ram[7:0] (in view: work.Apb3UartCtrl(verilog)) does not have a read/write conflict check. Possible simulation mismatch. To resolve a read/write conflict, either set syn_ramstyle = rw_check, or enable the "Read Write Check on RAM" Implementation Option. For more information, search for "read/write conflict check" in Online Help.
@W: MO197 :"w:\projects\security-contest\libero\contest\hdl\murax.v":251:2:251:7|Removing FSM register stateMachine_state[3] (in view view:work.UartCtrlTx(verilog)) because its output is a constant.
@W: MT246 :"w:\projects\security-contest\libero\contest\component\work\mainclockccc\mainclockccc_0\mainclockccc_mainclockccc_0_fccc.v":20:36:20:43|Blackbox CCC is missing a user supplied timing model. This may have a negative effect on timing analysis and optimizations (Quality of Results)
@W: MT420 |Found inferred clock MainClockCCC_MainClockCCC_0_FCCC|GL0_net_inferred_clock with period 10.00ns. Please declare a user-defined clock on net MainClockCCC_0.MainClockCCC_0.GL0_net.
@W: MT420 |Found inferred clock COREJTAGDEBUG_UJTAG_WRAPPER|UDRCK_inferred_clock with period 10.00ns. Please declare a user-defined clock on net JTAG_0.JTAG_0.genblk1\.genblk1\.genblk1\.UJTAG_inst.UDRCK.
